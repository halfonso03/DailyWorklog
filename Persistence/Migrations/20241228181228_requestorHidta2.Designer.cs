// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241228181228_requestorHidta2")]
    partial class requestorHidta2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Hidta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("tblHidta", (string)null);
                });

            modelBuilder.Entity("Domain.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("tblProject", (string)null);
                });

            modelBuilder.Entity("Domain.Requestor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name");

                    b.Property<int>("HidtaId")
                        .HasColumnType("int")
                        .HasColumnName("hidtaId");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name");

                    b.HasKey("Id");

                    b.HasIndex("HidtaId");

                    b.ToTable("tblRequestor", (string)null);
                });

            modelBuilder.Entity("Domain.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("HidtaId")
                        .HasColumnType("int")
                        .HasColumnName("hidta_id");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<int>("RequestorId")
                        .HasColumnType("int")
                        .HasColumnName("requestor_id");

                    b.Property<DateTime>("TaskDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("task_date");

                    b.HasKey("Id");

                    b.HasIndex("HidtaId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RequestorId");

                    b.ToTable("tblTaskItem", (string)null);
                });

            modelBuilder.Entity("Domain.Requestor", b =>
                {
                    b.HasOne("Domain.Hidta", "Hidta")
                        .WithMany("Requestors")
                        .HasForeignKey("HidtaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hidta");
                });

            modelBuilder.Entity("Domain.TaskItem", b =>
                {
                    b.HasOne("Domain.Hidta", "Hidta")
                        .WithMany("TaskItems")
                        .HasForeignKey("HidtaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Project", "Project")
                        .WithMany("TaskItems")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Requestor", "Requestor")
                        .WithMany("TaskItems")
                        .HasForeignKey("RequestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hidta");

                    b.Navigation("Project");

                    b.Navigation("Requestor");
                });

            modelBuilder.Entity("Domain.Hidta", b =>
                {
                    b.Navigation("Requestors");

                    b.Navigation("TaskItems");
                });

            modelBuilder.Entity("Domain.Project", b =>
                {
                    b.Navigation("TaskItems");
                });

            modelBuilder.Entity("Domain.Requestor", b =>
                {
                    b.Navigation("TaskItems");
                });
#pragma warning restore 612, 618
        }
    }
}
